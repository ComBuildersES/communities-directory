import{f8 as m,f9 as c,a9 as g,a7 as n,G as l,bJ as h,f2 as d,a1 as o,a2 as w,a3 as u}from"./index-D77Qk2xM.js";import{S as y,y as V}from"./LayerView-CIJ9wB3N.js";import{t as f}from"./GraphicContainer-BtgVs5Xq.js";import{A as v}from"./GraphicsView2D-Cub8Vc8T.js";import"./Container-BYXb5EbL.js";import"./AGraphicContainer-D3JZTs9q.js";import"./TechniqueInstance-sVgUwOuv.js";import"./UpdateTracking2D-VRwfTMLD.js";import"./BidiEngine-QXap_35O.js";import"./GeometryUtils-DEuLeBMh.js";import"./rasterizingUtils-BjddakVt.js";import"./floatRGBA-DMzzif2Q.js";import"./dataViewUtils-ZnAD8eGl.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-D7Barkrt.js";import"./VertexArrayObject-D1IEO_DV.js";import"./TileContainer-CLNDlmdy.js";import"./WGLContainer-CCktxbtT.js";import"./ProgramTemplate-CBJnDEpo.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-DeMozHGu.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-7ujoQGPj.js";import"./FeatureCommandQueue-Pg3fwwXd.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-D0zqxKvF.js";import"./ShaderBuilder-NneB8bb2.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BPrPah2z.js";import"./OverrideHelper-Ckd7dcDj.js";import"./FeatureMetadata-lEonpNo-.js";import"./timeSupport-BVRI-VWs.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-DikVqawO.js";import"./dehydratedFeatures-CqTeOKOG.js";let a=class extends y(V){attach(){this.graphicsView=new v({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new f(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>{var i;return(i=this.layer)==null?void 0:i.visible},()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):n.isCollection(i)&&i.length>0&&(r=i.map(s=>s&&s.uid).toArray());const e=r==null?void 0:r.filter(l);if(!(e!=null&&e.length))return h();const p=(t==null?void 0:t.name)??d;return this._addHighlights(e,p),h(()=>!this.destroyed&&this._removeHighlights(e,p))}_processHighlight(){var t;const i=this._getHighlights();(t=this.graphicsView)==null||t.setHighlight(i)}};o([w()],a.prototype,"graphicsView",void 0),a=o([u("esri.views.2d.layers.GraphicsLayerView2D")],a);const si=a;export{si as default};
