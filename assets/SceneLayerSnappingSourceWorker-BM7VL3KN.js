import{iJ as l,d4 as _,ct as h,A as p,K as v,Y as u,a1 as y,a3 as L}from"./index-B_4TRAtg.js";import{v as x,b as $,j}from"./lineSegment-CLaMuyQr.js";import{E as P,U as f,i as C}from"./sphere-Wu0Q7flO.js";import{b}from"./Octree-BjdronG-.js";import{m as S}from"./edgeProcessing-CMqh0tF9.js";import"./plane-CDxgE0WQ.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./InterleavedLayout-qekZQx2V.js";import"./BufferView-TYl1GUpS.js";import"./types-D0PSWh4d.js";import"./deduplicate-B940wJf0.js";import"./Indices-B_Sb729C.js";import"./VertexAttribute-Cq4MnHjR.js";import"./glUtil-Dmxz77Ju.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./Normals-CD34Gje-.js";const I=1e3;function V(t,o,n){const s=P(),e=f(s);return l(e,e,t,.5),l(e,e,o,.5),s[3]=_(e,t),h(e,e,n),s}let g=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=x(),this._tmpP1=p(),this._tmpP2=p(),this._tmpP3=p(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),v(o),await this._ensureEdgeLocations(t,o);const n=[];return this._edges.forEachNeighbor(s=>(this._addCandidates(t,s,n),n.length<I),t.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(t,o){const n=[];if(this._components.forEachNeighbor(i=>{if(i.info==null){const{id:c,uid:r}=i;n.push({id:c,uid:r})}return!0},t.bounds),!n.length)return;const s={components:n},e=await this.remoteClient.invoke("fetchAllEdgeLocations",s,o??{});for(const i of e.components)this._setFetchEdgeLocations(i)}async add(t){const o=new m(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const n=[];this._edges.forEachNeighbor(s=>(s.component===o&&n.push(s),!0),o.bounds),this._edges.remove(n),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(o==null||t.uid!==o.uid)return;const n=S.createView(t.locations),s=new Array(n.count),e=p(),i=p();for(let d=0;d<n.count;d++){n.position0.getVec(d,e),n.position1.getVec(d,i);const a=V(e,i,t.origin),E=new T(o,d,a);s[d]=E}this._edges.add(s);const{objectIds:c,origin:r}=t;o.info={locations:n,objectIds:c,origin:r}}_addCandidates(t,o,n){const{info:s}=o.component,{origin:e,objectIds:i}=s,c=s.locations,r=c.position0.getVec(o.index,this._tmpP1),d=c.position1.getVec(o.index,this._tmpP2);h(r,r,e),h(d,d,e);const a=i[c.componentIndex.get(o.index)];this._addEdgeCandidate(t,a,r,d,n),w(t,a,r,n),w(t,a,d,n)}_addEdgeCandidate(t,o,n,s,e){if(!t.returnEdge)return;const i=f(t.bounds),c=$(n,s,this._tmpLineSegment),r=j(c,i,this._tmpP3);C(t.bounds,r)&&e.push({type:"edge",objectId:o,target:u(r),distance:_(i,r),start:u(n),end:u(s)})}};g=y([L("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const R=g;function w(t,o,n,s){if(!t.returnVertex||!C(t.bounds,n))return;const e=f(t.bounds);s.push({type:"vertex",objectId:o,target:u(n),distance:_(e,n)})}class m{constructor(o,n){this.id=o,this.bounds=n,this.info=null,this.uid=++m.uid}}m.uid=0;class T{constructor(o,n,s){this.component=o,this.index=n,this.bounds=s}}export{R as default};
