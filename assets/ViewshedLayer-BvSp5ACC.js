import{V as T,bC as C,kl as H,a1 as i,a2 as r,v as J,b7 as B,km as x,kn as G,a3 as E,cH as S,fm as D,a7 as k,fj as Q,ko as U,bT as Y,aE as F,fk as I,bB as q,bN as K,bQ as W,bS as X,cN as Z}from"./index-D77Qk2xM.js";import{c as ee,b as te}from"./featureReferenceUtils-CoI7Rygm.js";import{c as ie}from"./Analysis-jQDJE3Q1.js";import"./sphere-C0EZKXiP.js";import"./mat3f64-q3fE-ZOt.js";import"./plane-DLSlJ1Ps.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./IntersectorInterfaces-CmNINbyF.js";import"./boundedPlane-BSzEv0V9.js";import"./lineSegment-DfqfIaUf.js";let o=class extends T.JSONSupportMixin(C){constructor(t){super(t),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}isValid(){return this.observer!=null&&this.farDistance>0}equals(t){return H(this.observer,t.observer)&&this.farDistance===t.farDistance&&this.heading===t.heading&&this.tilt===t.tilt&&this.horizontalFieldOfView===t.horizontalFieldOfView&&this.verticalFieldOfView===t.verticalFieldOfView&&ee(this.feature,t.feature)}};i([r({type:J,json:{write:{isRequired:!0}}})],o.prototype,"observer",void 0),i([r({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],o.prototype,"farDistance",void 0),i([r({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),B(e=>x.normalize(G(e),void 0,!0))],o.prototype,"heading",void 0),i([r({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],o.prototype,"tilt",void 0),i([r({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],o.prototype,"horizontalFieldOfView",void 0),i([r({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],o.prototype,"verticalFieldOfView",void 0),i([r(te)],o.prototype,"feature",void 0),i([r({json:{read:!1}})],o.prototype,"isValid",null),o=i([E("esri.analysis.Viewshed")],o);const A=o,z=k.ofType(A);let u=class extends ie{constructor(e){super(e),this.type="viewshed",this._extent=null}initialize(){this.addHandles(S(()=>this._computeExtent(),e=>{e.pending==null&&(this._extent=e.extent)},D))}get viewsheds(){return this._get("viewsheds")||new z}set viewsheds(e){this._set("viewsheds",Q(e,this.viewsheds,z))}get spatialReference(){for(const e of this.viewsheds)if(e.observer!=null)return e.observer.spatialReference;return null}get extent(){return this._extent}get requiredPropertiesForEditing(){return this.viewsheds.items.map(({observer:e})=>e)}async waitComputeExtent(){const e=this._computeExtent();e.pending!=null&&await e.pending}_computeExtent(){const{spatialReference:e}=this;if(e==null)return{pending:null,extent:null};const t=this.viewsheds.filter(s=>s.observer!=null),y=t.map(s=>s.observer).toArray(),l=U(y,e);return l.pending!=null?{pending:l.pending,extent:null}:{pending:null,extent:l.geometries.map((s,p)=>{const b=t.at(p);return s!=null&&b!=null?this._computeViewshedExtent(this.viewsheds.at(p),s):null}).filter(s=>s!=null).reduce((s,p)=>re(s,p),null)}}_computeViewshedExtent(e,t){const{farDistance:y,heading:l,tilt:s,horizontalFieldOfView:p,verticalFieldOfView:b}=e,{spatialReference:m}=t,V=p/2,O=b/2,N=y/m.metersPerUnit,L=[x.normalize(l-V),l,x.normalize(l+V)],d=Y.fromPoint(t),v=f=>{const h=L.map(a=>x.normalize(a-f));if(h[0]>h[2]||p===360)return N;const c=h.map(a=>Math.abs(a>180?360-a:a)).reduce((a,g)=>a>g?g:a);return c>90?0:N*Math.cos(F(c))};d.xmax+=v(90),d.xmin-=v(-90),d.ymax+=v(0),d.ymin-=v(180);const w=t.z;if(w!=null){let f=w,h=w;const c=s-90,a=q(c+O,-90,90),g=q(c-O,-90,90),R=m!=null&&m.isGeographic?y:N;f+=R*$(a),h+=R*$(g);const P=M(O)*R,_=$(c)*P*(1-M(V));s<90&&(f-=_),s>90&&(h-=_),d.zmax=Math.max(f,w),d.zmin=Math.min(h,w)}return d}clear(){this.viewsheds.removeAll()}};function re(e,t){return e==null?t:t==null?e:e.union(t)}function M(e){return Math.cos(F(e))}function $(e){return Math.sin(F(e))}i([r({type:["viewshed"]})],u.prototype,"type",void 0),i([r({cast:I,type:z,nonNullable:!0})],u.prototype,"viewsheds",null),i([r({readOnly:!0})],u.prototype,"spatialReference",null),i([r()],u.prototype,"_extent",void 0),i([r({readOnly:!0})],u.prototype,"extent",null),i([r({readOnly:!0})],u.prototype,"requiredPropertiesForEditing",null),u=i([E("esri.analysis.ViewshedAnalysis")],u);const j=u;let n=class extends K(W(X)){constructor(e){super(e),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new j,this.opacity=1}initialize(){this.addHandles(S(()=>this.source,(e,t)=>{t!=null&&t.parent===this&&(t.parent=null),e!=null&&(e.parent=this)},D))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(e){this.source===e&&(this.source=new j)}get analysis(){return this.source}set analysis(e){this.source=e}get viewsheds(){return this.source.viewsheds}set viewsheds(e){this.source.viewsheds=e}writeViewsheds(e,t,y,l){t.viewsheds=e.filter(s=>s.isValid()).map(s=>s.toJSON(l)).toJSON()}};i([r({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),i([r({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),i([r({type:j,nonNullable:!0})],n.prototype,"source",void 0),i([r({readOnly:!0})],n.prototype,"spatialReference",null),i([r({readOnly:!0})],n.prototype,"fullExtent",null),i([r({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),i([r({type:["show","hide"]})],n.prototype,"listMode",void 0),i([r({type:k.ofType(A),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),i([Z("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=i([E("esri.layers.ViewshedLayer")],n);const fe=n;export{fe as default};
