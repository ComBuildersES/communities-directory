const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/jsonConverter-IbE5-vcU.js","assets/ProjectionTransformation-B1cIt-Ky.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-JJrH86ui.js","assets/index-DzmwRtia.css"])))=>i.map(i=>d[i]);
import{bo as m,G as _,_ as d}from"./index-JJrH86ui.js";import{i as v,c as x,u as G,s as g}from"./operatorGeodesicBuffer-DNliQcKi.js";import{e as l}from"./geodeticCurveType-CirnHLSB.js";import"./SimpleGeometryCursor-B92kdZ15.js";let c,y,f;function N(){return!!c&&g()}async function E(){if(!N()){const[t]=await Promise.all([d(()=>import("./jsonConverter-IbE5-vcU.js"),__vite__mapDeps([0,1,2,3,4])),G()]);c=t.fromGeometries,y=t.fromGeometry,f=t.toGeometry}}function L(t,o,s={}){let{curveType:n="geodesic",maxDeviation:e=NaN,unit:r}=s;r&&(o=m(o,r,"meters"),e&&(e=m(e,r,"meters")));const a=y(t),i=a.getSpatialReference();return f(v(a.getGeometry(),i,l[n],o,e),i)}function R(t,o,s={}){let{curveType:n="geodesic",maxDeviation:e=NaN,union:r=!1,unit:a}=s;a&&(o=o.map(u=>m(u,a,"meters")),e&&(e=m(e,a,"meters")));const[i,p]=c(t);return x(i,p,l[n],o,e,r).map(u=>f(u,p)).filter(_)}export{L as execute,R as executeMany,N as isLoaded,E as load};
