const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodeticDensifyByLength-2QSP56Xr.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/ProjectionTransformation-D0WHEoaK.js","assets/index-D77Qk2xM.js","assets/index-Bd-rfTfD.css"])))=>i.map(i=>d[i]);
import{_ as i,ec as s,ed as a,ee as c}from"./index-D77Qk2xM.js";import{s as _}from"./SimpleGeometryCursor-B92kdZ15.js";let r;function f(){return!!r&&a()}async function p(){if(!f()){const[t,n]=await Promise.all([i(()=>import("./OperatorGeodeticDensifyByLength-2QSP56Xr.js"),__vite__mapDeps([0,1,2,3,4])),i(()=>import("./ProjectionTransformation-D0WHEoaK.js").then(e=>e.bF),__vite__mapDeps([2,1,3,4])).then(e=>e.aG).then(({injectPe:e})=>e),s()]);r=new t.OperatorGeodeticDensifyByLength,n(c)}}function d(t,n,e,o){return r.execute(t,n,e,o,null)}function y(t,n,e,o){const u=r.executeMany(new _(t),n,e,o,null);return Array.from(u)}function P(){return r.supportsCurves()}export{P as a,y as c,p as i,f as s,d as u};
